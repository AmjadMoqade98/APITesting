<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20200624 13:46:28.794" rpa="false">
<suite id="s1" name="ServerApi" source="C:\Users\amjad\PycharmProjects\MultiThreading\exalt\TestFiles\ServerApi.robot">
<kw name="OpenSession" library="resources" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200624 13:46:29.096" level="INFO">Creating Session using : alias=Multithreading, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200624 13:46:29.096" endtime="20200624 13:46:29.097"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.095" endtime="20200624 13:46:29.097"></status>
</kw>
<test id="s1-t1" name="GetServerResource">
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:29.706" level="INFO">GET Request : url=http://localhost:8080/server 
 path_url=/server 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:29.707" level="INFO">GET Response : url=http://localhost:8080/server 
 status=200, reason= 
 body=[{"id":"3VD08PC24ltuwDLfZ9ETD6","remainingCapacity":0},{"id":"6yrE32M7yJgtECWmcGuMV5","remainingCapacity":0},{"id":"5srFZge1Kc46IkN1QGW2ge","remainingCapacity":0},{"id":"5r3GKknyod7D9L4qYiQTSQ","remainingCapacity":0},{"id":"1ZifcOIxsUYmZyGR49X1Ly","remainingCapacity":0},{"id":"7Krvd40ywOJDeAnPizSDKC","remainingCapacity":0},{"id":"1xaQxFMhx6Wf7iDLbclfrG","remainingCapacity":0},{"id":"4XmgsyClObYnrr8GdfOtoB","remainingCapacity":0},{"id":"54pOKaPLGR1AcBTSDQCzkP","remainingCapacity":0},{"id":"3R3XrYdrFHXCzHZCx86Dtv","remainingCapacity":0}] 
 </msg>
<msg timestamp="20200624 13:46:29.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.098" endtime="20200624 13:46:29.707"></status>
</kw>
<msg timestamp="20200624 13:46:29.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.097" endtime="20200624 13:46:29.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200624 13:46:29.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.707" endtime="20200624 13:46:29.708"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.097" endtime="20200624 13:46:29.708" critical="yes"></status>
</test>
<test id="s1-t2" name="GetExistedServer">
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server/${existedServerId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:29.717" level="INFO">GET Request : url=http://localhost:8080/server/3R3XrYdrFHXCzHZCx86Dtv 
 path_url=/server/3R3XrYdrFHXCzHZCx86Dtv 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:29.717" level="INFO">GET Response : url=http://localhost:8080/server/3R3XrYdrFHXCzHZCx86Dtv 
 status=200, reason= 
 body={"id":"3R3XrYdrFHXCzHZCx86Dtv","remainingCapacity":0} 
 </msg>
<msg timestamp="20200624 13:46:29.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.710" endtime="20200624 13:46:29.718"></status>
</kw>
<msg timestamp="20200624 13:46:29.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.710" endtime="20200624 13:46:29.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200624 13:46:29.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.718" endtime="20200624 13:46:29.719"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.709" endtime="20200624 13:46:29.719" critical="yes"></status>
</test>
<test id="s1-t3" name="GetNonExistentServer">
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server/${nonExistedServerId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:29.726" level="INFO">GET Request : url=http://localhost:8080/server/mmmmmmmmmmmmmmmmmmmmmm 
 path_url=/server/mmmmmmmmmmmmmmmmmmmmmm 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:29.726" level="INFO">GET Response : url=http://localhost:8080/server/mmmmmmmmmmmmmmmmmmmmmm 
 status=404, reason= 
 body=server does not exist 
 </msg>
<msg timestamp="20200624 13:46:29.727" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.721" endtime="20200624 13:46:29.727"></status>
</kw>
<msg timestamp="20200624 13:46:29.727" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.720" endtime="20200624 13:46:29.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200624 13:46:29.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.727" endtime="20200624 13:46:29.728"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.720" endtime="20200624 13:46:29.728" critical="yes"></status>
</test>
<test id="s1-t4" name="RentServerWithValidSpace">
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server/rent?id=${customerId}&amp;space=50</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:29.740" level="INFO">GET Request : url=http://localhost:8080/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=50 
 path_url=/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=50 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:29.741" level="INFO">GET Response : url=http://localhost:8080/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=50 
 status=200, reason= 
 body={"id":"6zNJRmn3zaeSoSavQX4msb","remainingCapacity":50} 
 </msg>
<msg timestamp="20200624 13:46:29.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.730" endtime="20200624 13:46:29.741"></status>
</kw>
<msg timestamp="20200624 13:46:29.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.729" endtime="20200624 13:46:29.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200624 13:46:29.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.742" endtime="20200624 13:46:29.742"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.729" endtime="20200624 13:46:29.743" critical="yes"></status>
</test>
<test id="s1-t5" name="RentServerWithInvalidSpace">
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server/rent?id=${customerId}&amp;space=120</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:29.752" level="INFO">GET Request : url=http://localhost:8080/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=120 
 path_url=/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=120 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:29.752" level="INFO">GET Response : url=http://localhost:8080/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=120 
 status=400, reason= 
 body=Invalid space or Invalid customerId 
 </msg>
<msg timestamp="20200624 13:46:29.752" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.746" endtime="20200624 13:46:29.752"></status>
</kw>
<msg timestamp="20200624 13:46:29.752" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.745" endtime="20200624 13:46:29.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200624 13:46:29.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.753" endtime="20200624 13:46:29.753"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.743" endtime="20200624 13:46:29.754" critical="yes"></status>
</test>
<test id="s1-t6" name="DatabaseConsistencyOnServerSpan">
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server/rent?id=${customerId}&amp;space=${maximumServerSize}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:29.770" level="INFO">GET Request : url=http://localhost:8080/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=100 
 path_url=/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=100 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:29.770" level="INFO">GET Response : url=http://localhost:8080/server/rent?id=158fh7eFVXmTzK2FTZSFqt&amp;space=100 
 status=200, reason= 
 body={"id":"5WDCs41PyEhfBM7e0M2HCJ","remainingCapacity":0} 
 </msg>
<msg timestamp="20200624 13:46:29.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.756" endtime="20200624 13:46:29.771"></status>
</kw>
<msg timestamp="20200624 13:46:29.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:29.756" endtime="20200624 13:46:29.771"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20200624 13:46:29.772" level="INFO">To JSON using : content={"id":"5WDCs41PyEhfBM7e0M2HCJ","remainingCapacity":0} </msg>
<msg timestamp="20200624 13:46:29.773" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200624 13:46:29.773" level="INFO">${content} = {'id': '5WDCs41PyEhfBM7e0M2HCJ', 'remainingCapacity': 0}</msg>
<status status="PASS" starttime="20200624 13:46:29.772" endtime="20200624 13:46:29.773"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${content['id']}</arg>
</arguments>
<assign>
<var>${spannedServerId}</var>
</assign>
<msg timestamp="20200624 13:46:29.774" level="INFO">${spannedServerId} = 5WDCs41PyEhfBM7e0M2HCJ</msg>
<status status="PASS" starttime="20200624 13:46:29.773" endtime="20200624 13:46:29.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200624 13:46:34.776" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200624 13:46:29.774" endtime="20200624 13:46:34.776"></status>
</kw>
<kw name="GetRequestt" library="resources">
<arguments>
<arg>/server/${spannedServerId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${resource}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200624 13:46:34.785" level="INFO">GET Request : url=http://localhost:8080/server/5WDCs41PyEhfBM7e0M2HCJ 
 path_url=/server/5WDCs41PyEhfBM7e0M2HCJ 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200624 13:46:34.785" level="INFO">GET Response : url=http://localhost:8080/server/5WDCs41PyEhfBM7e0M2HCJ 
 status=200, reason= 
 body={"id":"5WDCs41PyEhfBM7e0M2HCJ","remainingCapacity":0} 
 </msg>
<msg timestamp="20200624 13:46:34.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:34.777" endtime="20200624 13:46:34.785"></status>
</kw>
<msg timestamp="20200624 13:46:34.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200624 13:46:34.777" endtime="20200624 13:46:34.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20200624 13:46:34.786" endtime="20200624 13:46:34.787"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20200624 13:46:34.788" level="INFO">To JSON using : content={"id":"5WDCs41PyEhfBM7e0M2HCJ","remainingCapacity":0} </msg>
<msg timestamp="20200624 13:46:34.788" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200624 13:46:34.788" level="INFO">${content} = {'id': '5WDCs41PyEhfBM7e0M2HCJ', 'remainingCapacity': 0}</msg>
<status status="PASS" starttime="20200624 13:46:34.787" endtime="20200624 13:46:34.788"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${content['remainingCapacity']}</arg>
</arguments>
<assign>
<var>${remainingCapacity}</var>
</assign>
<msg timestamp="20200624 13:46:34.789" level="INFO">${remainingCapacity} = 0</msg>
<status status="PASS" starttime="20200624 13:46:34.789" endtime="20200624 13:46:34.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200624 13:46:34.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:34.790" endtime="20200624 13:46:34.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${remainingCapacity}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 13:46:34.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 13:46:34.790" endtime="20200624 13:46:34.790"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:29.755" endtime="20200624 13:46:34.791" critical="yes"></status>
</test>
<kw name="DeleteSessions" library="resources" type="teardown">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20200624 13:46:34.793" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20200624 13:46:34.793" endtime="20200624 13:46:34.793"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:34.793" endtime="20200624 13:46:34.794"></status>
</kw>
<status status="PASS" starttime="20200624 13:46:28.796" endtime="20200624 13:46:34.794"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ServerApi">ServerApi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
